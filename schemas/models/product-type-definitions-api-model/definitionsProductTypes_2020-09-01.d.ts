/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    "/definitions/2020-09-01/productTypes": {
        /**
         * Search for and return a list of Amazon product types that have definitions available.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 5 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
         */
        get: operations["searchDefinitionsProductTypes"];
        parameters: {};
    };
    "/definitions/2020-09-01/productTypes/{productType}": {
        /**
         * Retrieve an Amazon product type definition.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 5 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
         */
        get: operations["getDefinitionsProductType"];
        parameters: {};
    };
}
export interface definitions {
    /** @description Error response returned when the request is unsuccessful. */
    Error: {
        /** @description An error code that identifies the type of error that occurred. */
        code: string;
        /** @description A message that describes the error condition. */
        message: string;
        /** @description Additional details that can help the caller understand or fix the issue. */
        details?: string;
    };
    /** @description A list of error responses returned when a request is unsuccessful. */
    ErrorList: {
        errors: definitions["Error"][];
    };
    SchemaLink: {
        /** @description Link to retrieve the schema. */
        link: {
            /** @description URI resource for the link. */
            resource: string;
            /** @description HTTP method for the link operation. */
            verb: "GET";
        };
        /** @description Checksum hash of the schema (Base64 MD5). Can be used to verify schema contents, identify changes between schema versions, and for caching. */
        checksum: string;
    };
    /** @description A product type definition represents the attributes and data requirements for a product type in the Amazon catalog. Product type definitions are used interchangeably between the Selling Partner API for Listings Items, Selling Partner API for Catalog Items, and JSON-based listings feeds in the Selling Partner API for Feeds. */
    ProductTypeDefinition: {
        /** @description Link to meta-schema describing the vocabulary used by the product type schema. */
        metaSchema?: definitions["SchemaLink"];
        /** @description Link to schema describing the attributes and requirements for the product type. */
        schema: definitions["SchemaLink"];
        /** @description Name of the requirements set represented in this product type definition. */
        requirements: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
        /** @description Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all of the required attributes being present (such as for partial updates). */
        requirementsEnforced: "ENFORCED" | "NOT_ENFORCED";
        /** @description Mapping of property group names to property groups. Property groups represent logical groupings of schema properties that can be used for display or informational purposes. */
        propertyGroups: {
            [key: string]: definitions["PropertyGroup"];
        };
        /** @description Locale of the display elements contained in the product type definition. */
        locale: string;
        /** @description Amazon marketplace identifiers for which the product type definition is applicable. */
        marketplaceIds: string[];
        /** @description The name of the Amazon product type that this product type definition applies to. */
        productType: string;
        /** @description The version details for the Amazon product type. */
        productTypeVersion: definitions["ProductTypeVersion"];
    };
    /** @description A property group represents a logical grouping of schema properties that can be used for display or informational purposes. */
    PropertyGroup: {
        /** @description The display label of the property group. */
        title?: string;
        /** @description The description of the property group. */
        description?: string;
        /** @description The names of the schema properties for the property group. */
        propertyNames?: string[];
    };
    /** @description The version details for an Amazon product type. */
    ProductTypeVersion: {
        /** @description Version identifier. */
        version: string;
        /** @description When true, the version indicated by the version identifier is the latest available for the Amazon product type. */
        latest: boolean;
        /** @description When true, the version indicated by the version identifier is the prerelease (release candidate) for the Amazon product type. */
        releaseCandidate?: boolean;
    };
    /** @description An Amazon product type with a definition available. */
    ProductType: {
        /** @description The name of the Amazon product type. */
        name: string;
        /** @description The Amazon marketplace identifiers for which the product type definition is available. */
        marketplaceIds: string[];
    };
    /** @description A list of Amazon product types with definitions available. */
    ProductTypeList: {
        productTypes: definitions["ProductType"][];
    };
}
export interface operations {
    /**
     * Search for and return a list of Amazon product types that have definitions available.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 5 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    searchDefinitionsProductTypes: {
        parameters: {
            query: {
                /** A comma-delimited list of keywords to search product types by. */
                keywords?: string[];
                /** A comma-delimited list of Amazon marketplace identifiers for the request. */
                marketplaceIds: string[];
            };
        };
        responses: {
            /** Successfully retrieved a list of Amazon product types that have definitions available. */
            200: {
                headers: {};
                schema: definitions["ProductTypeList"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The resource specified does not exist. */
            404: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["ErrorList"];
            };
        };
    };
    /**
     * Retrieve an Amazon product type definition.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 5 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    getDefinitionsProductType: {
        parameters: {
            path: {
                /** The Amazon product type name. */
                productType: string;
            };
            query: {
                /** A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner. */
                sellerId?: string;
                /**
                 * A comma-delimited list of Amazon marketplace identifiers for the request.
                 * Note: This parameter is limited to one marketplaceId at this time.
                 */
                marketplaceIds: string[];
                /** The version of the Amazon product type to retrieve. Defaults to "LATEST",. Prerelease versions of product type definitions may be retrieved with "RELEASE_CANDIDATE". If no prerelease version is currently available, the "LATEST" live version will be provided. */
                productTypeVersion?: string;
                /** The name of the requirements set to retrieve requirements for. */
                requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
                /** Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates). */
                requirementsEnforced?: "ENFORCED" | "NOT_ENFORCED";
                /** Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request. */
                locale?: "DEFAULT" | "ar" | "ar_AE" | "de" | "de_DE" | "en" | "en_AE" | "en_AU" | "en_CA" | "en_GB" | "en_IN" | "en_SG" | "en_US" | "es" | "es_ES" | "es_MX" | "es_US" | "fr" | "fr_CA" | "fr_FR" | "it" | "it_IT" | "ja" | "ja_JP" | "nl" | "nl_NL" | "pl" | "pl_PL" | "pt" | "pt_BR" | "pt_PT" | "sv" | "sv_SE" | "tr" | "tr_TR" | "zh" | "zh_CN" | "zh_TW";
            };
        };
        responses: {
            /** Successfully retrieved an Amazon product type definition. */
            200: {
                headers: {};
                schema: definitions["ProductTypeDefinition"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The resource specified does not exist. */
            404: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["ErrorList"];
            };
        };
    };
}
export interface external {
}
