/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/vendor/directFulfillment/payments/v1/invoices": {
    /**
     * Submits one or more invoices for a vendor's direct fulfillment orders.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 10 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["submitInvoice"];
    parameters: {};
  };
}

export interface definitions {
  /** @description The request schema for the submitInvoice operation. */
  SubmitInvoiceRequest: {
    invoices?: definitions["InvoiceDetail"][];
  };
  InvoiceDetail: {
    /** @description The unique invoice number. */
    invoiceNumber: string;
    /**
     * Format: date-time
     * @description Invoice date.
     */
    invoiceDate: string;
    /** @description An additional unique reference number used for regulatory or other purposes. */
    referenceNumber?: string;
    /** @description Name, address and tax details of the party receiving the payment of this invoice. */
    remitToParty: definitions["PartyIdentification"];
    /** @description Warehouse code of the vendor as in the order. */
    shipFromParty: definitions["PartyIdentification"];
    /** @description Name, address and tax details of the party to whom this invoice is issued. */
    billToParty?: definitions["PartyIdentification"];
    /** @description Ship-to country code. */
    shipToCountryCode?: string;
    /** @description The payment terms for the invoice. */
    paymentTermsCode?: string;
    /** @description Total amount details of the invoice. */
    invoiceTotal: definitions["Money"];
    /** @description Individual tax details per line item. */
    taxTotals?: definitions["TaxDetail"][];
    /** @description Additional details provided by the selling party, for tax related or other purposes. */
    additionalDetails?: definitions["AdditionalDetails"][];
    /** @description Total charge amount details for all line items. */
    chargeDetails?: definitions["ChargeDetails"][];
    /** @description Provides the details of the items in this invoice. */
    items: definitions["InvoiceItem"][];
  };
  InvoiceItem: {
    /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
    itemSequenceNumber: string;
    /** @description Buyer's standard identification number (ASIN) of an item. */
    buyerProductIdentifier?: string;
    /** @description The vendor selected product identification of the item. */
    vendorProductIdentifier?: string;
    /** @description Item quantity invoiced. */
    invoicedQuantity: definitions["ItemQuantity"];
    /** @description Net price (before tax) to vendor with currency details. */
    netCost: definitions["Money"];
    /** @description The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code. */
    purchaseOrderNumber: string;
    /** @description The vendor's order number for this order. */
    vendorOrderNumber?: string;
    /** @description HSN tax code. The HSN number cannot contain alphabets. */
    hsnCode?: string;
    /** @description Individual tax details per line item. */
    taxDetails?: definitions["TaxDetail"][];
    /** @description Individual charge details per line item. */
    chargeDetails?: definitions["ChargeDetails"][];
  };
  PartyIdentification: {
    /** @description Assigned Identification for the party. */
    partyId: string;
    /** @description Identification of the party by address. */
    address?: definitions["Address"];
    /** @description Tax registration details of the entity. */
    taxRegistrationDetails?: definitions["TaxRegistrationDetail"][];
  };
  /** @description Tax registration details of the entity. */
  TaxRegistrationDetail: {
    /** @description Tax registration type for the entity. */
    taxRegistrationType?: "VAT" | "GST";
    /** @description Tax registration number for the party. For example, VAT ID. */
    taxRegistrationNumber: string;
    /** @description Address associated with the tax registration number. */
    taxRegistrationAddress?: definitions["Address"];
    /** @description Tax registration message that can be used for additional tax related details. */
    taxRegistrationMessage?: string;
  };
  /** @description Address of the party. */
  Address: {
    /** @description The name of the person, business or institution at that address. */
    name: string;
    /** @description First line of the address. */
    addressLine1: string;
    /** @description Additional street address information, if required. */
    addressLine2?: string;
    /** @description Additional street address information, if required. */
    addressLine3?: string;
    /** @description The city where the person, business or institution is located. */
    city: string;
    /** @description The county where person, business or institution is located. */
    county?: string;
    /** @description The district where person, business or institution is located. */
    district?: string;
    /** @description The state or region where person, business or institution is located. */
    stateOrRegion: string;
    /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
    postalCode: string;
    /** @description The two digit country code in ISO 3166-1 alpha-2 format. */
    countryCode: string;
    /** @description The phone number of the person, business or institution located at that address. */
    phone?: string;
  };
  /** @description An amount of money, including units in the form of currency. */
  Money: {
    /** @description Three digit currency code in ISO 4217 format. */
    currencyCode: string;
    amount: definitions["Decimal"];
  };
  /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
  Decimal: string;
  /** @description Details of tax amount applied. */
  TaxDetail: {
    /** @description Type of the tax applied. */
    taxType:
      | "CGST"
      | "SGST"
      | "CESS"
      | "UTGST"
      | "IGST"
      | "MwSt."
      | "PST"
      | "TVA"
      | "VAT"
      | "GST"
      | "ST"
      | "Consumption"
      | "MutuallyDefined"
      | "DomesticVAT";
    /** @description Tax percentage applied. Percentage must be expressed in decimal. */
    taxRate?: definitions["Decimal"];
    /** @description Total tax amount applied on invoice total or an item total. */
    taxAmount: definitions["Money"];
    /** @description This field will contain the invoice amount that is taxable at the rate specified in the tax rate field. */
    taxableAmount?: definitions["Money"];
  };
  /** @description Monetary and tax details of the charge. */
  ChargeDetails: {
    /** @description Type of charge applied. */
    type:
      | "GIFTWRAP"
      | "FULFILLMENT"
      | "MARKETINGINSERT"
      | "PACKAGING"
      | "LOADING"
      | "FREIGHTOUT"
      | "TAX_COLLECTED_AT_SOURCE";
    chargeAmount: definitions["Money"];
    /** @description Individual tax details per line item. */
    taxDetails?: definitions["TaxDetail"][];
  };
  /** @description A field where selling party can provide additional information for tax related or any other purposes. */
  AdditionalDetails: {
    /** @description The type of the additional information provided by the selling party. */
    type: "SUR" | "OCR";
    /** @description The detail of the additional information provided by the selling party. */
    detail: string;
    /** @description The language code of the additional information detail. */
    languageCode?: string;
  };
  /** @description Details of item quantity. */
  ItemQuantity: {
    /** @description Quantity of units available for a specific item. */
    amount: number;
    /** @description Unit of measure for the available quantity. */
    unitOfMeasure: string;
  };
  /** @description The response schema for the submitInvoice operation. */
  SubmitInvoiceResponse: {
    /** @description The response payload for the submitInvoice operation. */
    payload?: definitions["TransactionReference"];
    errors?: definitions["ErrorList"];
  };
  TransactionReference: {
    /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
    transactionId?: string;
  };
  /** @description A list of error responses returned when a request is unsuccessful. */
  ErrorList: definitions["Error"][];
  /** @description Error response returned when the request is unsuccessful. */
  Error: {
    /** @description An error code that identifies the type of error that occurred. */
    code: string;
    /** @description A message that describes the error condition. */
    message: string;
    /** @description Additional details that can help the caller understand or fix the issue. */
    details?: string;
  };
}

export interface operations {
  /**
   * Submits one or more invoices for a vendor's direct fulfillment orders.
   *
   * **Usage Plans:**
   *
   * | Plan type | Rate (requests per second) | Burst |
   * | ---- | ---- | ---- |
   * |Default| 10 | 10 |
   * |Selling partner specific| Variable | Variable |
   *
   * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  submitInvoice: {
    parameters: {
      body: {
        body: definitions["SubmitInvoiceRequest"];
      };
    };
    responses: {
      /** Success. */
      202: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** The resource specified does not exist. */
      404: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** The request size exceeded the maximum accepted size. */
      413: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** The request payload is in an unsupported format. */
      415: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["SubmitInvoiceResponse"];
      };
    };
  };
}

export interface external {}
