/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    "/listings/2020-09-01/items/{sellerId}/{sku}": {
        /**
         * Creates a new or fully-updates an existing listings item for a selling partner.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 5 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
         */
        put: operations["putListingsItem"];
        /**
         * Delete a listings item for a selling partner.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 5 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
         */
        delete: operations["deleteListingsItem"];
        /**
         * Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 5 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
         */
        patch: operations["patchListingsItem"];
    };
}
export interface definitions {
    /** @description Error response returned when the request is unsuccessful. */
    Error: {
        /** @description An error code that identifies the type of error that occurred. */
        code: string;
        /** @description A message that describes the error condition. */
        message: string;
        /** @description Additional details that can help the caller understand or fix the issue. */
        details?: string;
    };
    /** @description A list of error responses returned when a request is unsuccessful. */
    ErrorList: {
        errors: definitions["Error"][];
    };
    /** @description An issue with a listings item. */
    Issue: {
        /** @description An issue code that identifies the type of issue. */
        code: string;
        /** @description A message that describes the issue. */
        message: string;
        /** @description The severity of the issue. */
        severity: "ERROR" | "WARNING" | "INFO";
        /** @description Name of the attribute associated with the issue, if applicable. */
        attributeName?: string;
    };
    /** @description Individual JSON Patch operation for an HTTP PATCH request. */
    PatchOperation: {
        /** @description Type of JSON Patch operation. Supported JSON Patch operations include add, replace, and delete. See <https://tools.ietf.org/html/rfc6902>. */
        op: "add" | "replace" | "delete";
        /** @description JSON Pointer path of the element to patch. See <https://tools.ietf.org/html/rfc6902>. */
        path: string;
        /** @description JSON value to add, replace, or delete. */
        value?: {
            [key: string]: unknown;
        }[];
    };
    /** @description The request body schema for the patchListingsItem operation. */
    ListingsItemPatchRequest: {
        /** @description The Amazon product type of the listings item. */
        productType: string;
        /** @description One or more JSON Patch operations to perform on the listings item. */
        patches: definitions["PatchOperation"][];
    };
    /** @description The request body schema for the putListingsItem operation. */
    ListingsItemPutRequest: {
        /** @description The Amazon product type of the listings item. */
        productType: string;
        /** @description The name of the requirements set for the provided data. */
        requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
        /** @description JSON object containing structured listings item attribute data keyed by attribute name. */
        attributes: {
            [key: string]: unknown;
        };
    };
    /** @description Response containing the results of a submission to the Selling Partner API for Listings Items. */
    ListingsItemSubmissionResponse: {
        /** @description A selling partner provided identifier for an Amazon listing. */
        sku: string;
        /** @description The status of the listings item submission. */
        status: "ACCEPTED" | "INVALID";
        /** @description The unique identifier of the listings item submission. */
        submissionId: string;
        /** @description Listings item issues related to the listings item submission. */
        issues?: definitions["Issue"][];
    };
}
export interface operations {
    /**
     * Creates a new or fully-updates an existing listings item for a selling partner.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 5 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    putListingsItem: {
        parameters: {
            path: {
                /** A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            query: {
                /** A comma-delimited list of Amazon marketplace identifiers for the request. */
                marketplaceIds: string[];
                /** A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale. */
                issueLocale?: string;
            };
            body: {
                /** The request body schema for the putListingsItem operation. */
                body: definitions["ListingsItemPutRequest"];
            };
        };
        responses: {
            /** Successfully understood the request to create or fully-update a listings item. See the response to determine if the submission has been accepted. */
            200: {
                headers: {};
                schema: definitions["ListingsItemSubmissionResponse"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["ErrorList"];
            };
        };
    };
    /**
     * Delete a listings item for a selling partner.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 5 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    deleteListingsItem: {
        parameters: {
            path: {
                /** A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            query: {
                /** A comma-delimited list of Amazon marketplace identifiers for the request. */
                marketplaceIds: string[];
                /** A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale. */
                issueLocale?: string;
            };
        };
        responses: {
            /** Successfully understood the listings item delete request. See the response to determine whether the submission has been accepted. */
            200: {
                headers: {};
                schema: definitions["ListingsItemSubmissionResponse"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["ErrorList"];
            };
        };
    };
    /**
     * Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 5 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    patchListingsItem: {
        parameters: {
            path: {
                /** A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            query: {
                /** A comma-delimited list of Amazon marketplace identifiers for the request. */
                marketplaceIds: string[];
                /** A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale. */
                issueLocale?: string;
            };
            body: {
                /** The request body schema for the patchListingsItem operation. */
                body: definitions["ListingsItemPatchRequest"];
            };
        };
        responses: {
            /** Successfully understood the listings item patch request. See the response to determine if the submission was accepted. */
            200: {
                headers: {};
                schema: definitions["ListingsItemSubmissionResponse"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["ErrorList"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["ErrorList"];
            };
        };
    };
}
export interface external {
}
