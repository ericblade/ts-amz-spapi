/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/mfn/v0/eligibleServices": {
    /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["getEligibleShipmentServicesOld"];
  };
  "/mfn/v0/eligibleShippingServices": {
    /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 5 | 10 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["getEligibleShipmentServices"];
  };
  "/mfn/v0/shipments/{shipmentId}": {
    /**
     * Returns the shipment information for an existing shipment.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    get: operations["getShipment"];
    /**
     * Cancel the shipment indicated by the specified shipment identifier.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    delete: operations["cancelShipment"];
  };
  "/mfn/v0/shipments/{shipmentId}/cancel": {
    /**
     * Cancel the shipment indicated by the specified shipment identifer.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    put: operations["cancelShipmentOld"];
  };
  "/mfn/v0/shipments": {
    /**
     * Create a shipment with the information provided.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["createShipment"];
  };
  "/mfn/v0/sellerInputs": {
    /**
     * Get a list of additional seller inputs required for a ship method. This is generally used for international shipping.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["getAdditionalSellerInputsOld"];
  };
  "/mfn/v0/additionalSellerInputs": {
    /**
     * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 1 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    post: operations["getAdditionalSellerInputs"];
  };
}

export interface definitions {
  /** @description Error response returned when the request is unsuccessful. */
  Error: {
    /** @description An error code that identifies the type of error that occured. */
    code: string;
    /** @description A message that describes the error condition in a human-readable form. */
    message: string;
    /** @description Additional details that can help the caller understand or fix the issue. */
    details?: string;
  };
  /** @description A list of error responses returned when a request is unsuccessful. */
  ErrorList: definitions["Error"][];
  /** @description Whether to include a packing slip. */
  LabelFormatOptionRequest: {
    /** @description When true, include a packing slip with the label. */
    IncludePackingSlipWithLabel?: boolean;
  };
  /** @description The label format details and whether to include a packing slip. */
  LabelFormatOption: {
    /** @description When true, include a packing slip with the label. */
    IncludePackingSlipWithLabel?: boolean;
    LabelFormat?: definitions["LabelFormat"];
  };
  /** @description Indicates whether the carrier will pick up the package, and what fee is charged, if any. */
  AvailableCarrierWillPickUpOption: {
    CarrierWillPickUpOption: definitions["CarrierWillPickUpOption"];
    /** @description The fee charged. */
    Charge: definitions["CurrencyAmount"];
  };
  /** @description List of available carrier pickup options. */
  AvailableCarrierWillPickUpOptionsList: definitions["AvailableCarrierWillPickUpOption"][];
  /** @description The available delivery confirmation options, and the fee charged, if any. */
  AvailableDeliveryExperienceOption: {
    DeliveryExperienceOption: definitions["DeliveryExperienceOption"];
    Charge: definitions["CurrencyAmount"];
  };
  /** @description List of available delivery experience options. */
  AvailableDeliveryExperienceOptionsList: definitions["AvailableDeliveryExperienceOption"][];
  /** @description The available shipping service options. */
  AvailableShippingServiceOptions: {
    AvailableCarrierWillPickUpOptions: definitions["AvailableCarrierWillPickUpOptionsList"];
    AvailableDeliveryExperienceOptions: definitions["AvailableDeliveryExperienceOptionsList"];
  };
  AvailableFormatOptionsForLabel: definitions["AvailableFormatOptionsForLabelList"];
  /** @description The available label formats. */
  AvailableFormatOptionsForLabelList: definitions["LabelFormatOption"][];
  /** @description A validation constraint. */
  Constraint: {
    /** @description A regular expression. */
    ValidationRegEx?: string;
    /** @description A validation string. */
    ValidationString: string;
  };
  /** @description List of constraints. */
  Constraints: definitions["Constraint"][];
  /** @description Maps the additional seller input to the definition. The key to the map is the field name. */
  AdditionalInputs: {
    /** @description The field name. */
    AdditionalInputFieldName?: string;
    SellerInputDefinition?: definitions["SellerInputDefinition"];
  };
  /** @description Specifies characteristics that apply to a seller input. */
  SellerInputDefinition: {
    /** @description When true, the additional input field is required. */
    IsRequired: boolean;
    /** @description The data type of the additional input field. */
    DataType: string;
    Constraints: definitions["Constraints"];
    /** @description The display text for the additional input field. */
    InputDisplayText: string;
    /** @description Whether the seller input applies to the item or the shipment. */
    InputTarget?: definitions["InputTargetType"];
    StoredValue: definitions["AdditionalSellerInput"];
    RestrictedSetValues?: definitions["RestrictedSetValues"];
  };
  /** @description Indicates whether the additional seller input is at the item or shipment level. */
  InputTargetType: "SHIPMENT_LEVEL" | "ITEM_LEVEL";
  /** @description A list of additional inputs. */
  AdditionalInputsList: definitions["AdditionalInputs"][];
  /** @description Additional information required to purchase shipping. */
  AdditionalSellerInput: {
    /** @description The data type of the additional information. */
    DataType?: string;
    /** @description The value when the data type is string. */
    ValueAsString?: string;
    /** @description The value when the data type is boolean. */
    ValueAsBoolean?: boolean;
    /** @description The value when the data type is integer. */
    ValueAsInteger?: number;
    /** @description The value when the data type is a date-time formatted string. */
    ValueAsTimestamp?: definitions["Timestamp"];
    ValueAsAddress?: definitions["Address"];
    ValueAsWeight?: definitions["Weight"];
    ValueAsDimension?: definitions["Length"];
    ValueAsCurrency?: definitions["CurrencyAmount"];
  };
  /** @description An additional set of seller inputs required to purchase shipping. */
  AdditionalSellerInputs: {
    /** @description The name of the additional input field. */
    AdditionalInputFieldName: string;
    AdditionalSellerInput: definitions["AdditionalSellerInput"];
  };
  /** @description A list of additional seller input pairs required to purchase shipping. */
  AdditionalSellerInputsList: definitions["AdditionalSellerInputs"][];
  /** @description The postal address information. */
  Address: {
    Name: definitions["AddressName"];
    AddressLine1: definitions["AddressLine1"];
    AddressLine2?: definitions["AddressLine2"];
    AddressLine3?: definitions["AddressLine3"];
    DistrictOrCounty?: definitions["DistrictOrCounty"];
    Email: definitions["EmailAddress"];
    City: definitions["City"];
    StateOrProvinceCode?: definitions["StateOrProvinceCode"];
    PostalCode: definitions["PostalCode"];
    CountryCode: definitions["CountryCode"];
    Phone: definitions["PhoneNumber"];
  };
  /** @description The street address information. */
  AddressLine1: string;
  /** @description Additional street address information. */
  AddressLine2: string;
  /** @description Additional street address information. */
  AddressLine3: string;
  /** @description The name of the addressee, or business name. */
  AddressName: string;
  /** @description An Amazon-defined order identifier, in 3-7-7 format. */
  AmazonOrderId: string;
  /** @description Response schema. */
  CancelShipmentResponse: {
    /** @description The payload for the cancelShipment operation. */
    payload?: definitions["Shipment"];
    /** @description One or more unexpected errors occurred during the cancelShipment operation. */
    errors?: definitions["ErrorList"];
  };
  /** @description The city. */
  City: string;
  /** @description The country code. A two-character country code, in ISO 3166-1 alpha-2 format. */
  CountryCode: string;
  /** @description Request schema. */
  CreateShipmentRequest: {
    /** @description Shipment information required for creating a shipment. */
    ShipmentRequestDetails: definitions["ShipmentRequestDetails"];
    ShippingServiceId: definitions["ShippingServiceIdentifier"];
    /** @description Identifies a shipping service order made by a carrier. */
    ShippingServiceOfferId?: string;
    /** @description Hazardous materials options for a package. Consult the terms and conditions for each carrier for more information about hazardous materials. */
    HazmatType?: definitions["HazmatType"];
    LabelFormatOption?: definitions["LabelFormatOptionRequest"];
    /** @description A list of additional seller inputs required to ship this shipment. */
    ShipmentLevelSellerInputsList?: definitions["AdditionalSellerInputsList"];
  };
  /** @description Response schema. */
  CreateShipmentResponse: {
    /** @description Shipment information. */
    payload?: definitions["Shipment"];
    /** @description One or more unexpected errors occurred during the createShipment operation. */
    errors?: definitions["ErrorList"];
  };
  ItemLevelFields: {
    /** @description The Amazon Standard Identification Number (ASIN) of the item. */
    Asin: string;
    AdditionalInputs: definitions["AdditionalInputsList"];
  };
  /** @description A list of item level fields. */
  ItemLevelFieldsList: definitions["ItemLevelFields"][];
  /** @description Request schema. */
  GetAdditionalSellerInputsRequest: {
    ShippingServiceId: definitions["ShippingServiceIdentifier"];
    /** @description The address from which to ship. */
    ShipFromAddress: definitions["Address"];
    /** @description An Amazon defined order identifier */
    OrderId: definitions["AmazonOrderId"];
  };
  /** @description The payload for the getAdditionalSellerInputs operation. */
  GetAdditionalSellerInputsResult: {
    ShipmentLevelFields?: definitions["AdditionalInputsList"];
    ItemLevelFieldsList?: definitions["ItemLevelFieldsList"];
  };
  /** @description Response schema. */
  GetAdditionalSellerInputsResponse: {
    payload?: definitions["GetAdditionalSellerInputsResult"];
    errors?: definitions["ErrorList"];
  };
  /** @description Currency type and amount. */
  CurrencyAmount: {
    /** @description Three-digit currency code in ISO 4217 format. */
    CurrencyCode: string;
    /**
     * Format: double
     * @description The currency amount.
     */
    Amount: number;
  };
  /**
   * @description Custom text to print on the label.
   *
   * Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support CustomTextForLabel.
   */
  CustomTextForLabel: string;
  /** @description The delivery confirmation level. */
  DeliveryExperienceType:
    | "DeliveryConfirmationWithAdultSignature"
    | "DeliveryConfirmationWithSignature"
    | "DeliveryConfirmationWithoutSignature"
    | "NoTracking";
  /** @description The district or county. */
  DistrictOrCounty: string;
  /** @description The email address. */
  EmailAddress: string;
  /** @description The document data and checksum. */
  FileContents: {
    /** @description Data for printing labels, in the form of a Base64-encoded, GZip-compressed string. */
    Contents: string;
    FileType: definitions["FileType"];
    /** @description An MD5 hash to validate the PDF document data, in the form of a Base64-encoded string. */
    Checksum: string;
  };
  /** @description The file type for a label. */
  FileType: "application/pdf" | "application/zpl" | "image/png";
  /** @description Request schema. */
  GetEligibleShipmentServicesRequest: {
    /** @description Shipment information required for requesting shipping service offers. */
    ShipmentRequestDetails: definitions["ShipmentRequestDetails"];
    ShippingOfferingFilter?: definitions["ShippingOfferingFilter"];
  };
  /** @description Response schema. */
  GetEligibleShipmentServicesResponse: {
    payload?: definitions["GetEligibleShipmentServicesResult"];
    /** @description One or more unexpected errors occurred during this operation. */
    errors?: definitions["ErrorList"];
  };
  /** @description The payload for the getEligibleShipmentServices operation. */
  GetEligibleShipmentServicesResult: {
    /** @description A list of shipping services offers. */
    ShippingServiceList: definitions["ShippingServiceList"];
    RejectedShippingServiceList?: definitions["RejectedShippingServiceList"];
    TemporarilyUnavailableCarrierList?: definitions["TemporarilyUnavailableCarrierList"];
    TermsAndConditionsNotAcceptedCarrierList?: definitions["TermsAndConditionsNotAcceptedCarrierList"];
  };
  /** @description Response schema. */
  GetShipmentResponse: {
    /** @description The payload for the getShipment operation. */
    payload?: definitions["Shipment"];
    /** @description One or more unexpected errors occurred during this operation. */
    errors?: definitions["ErrorList"];
  };
  /** @description Hazardous materials options for a package. Consult the terms and conditions for each carrier for more information on hazardous materials. */
  HazmatType: "None" | "LQHazmat";
  /** @description An Amazon order item identifier and a quantity. */
  Item: {
    OrderItemId: definitions["OrderItemId"];
    Quantity: definitions["ItemQuantity"];
    ItemWeight?: definitions["Weight"];
    ItemDescription?: definitions["ItemDescription"];
    TransparencyCodeList?: definitions["TransparencyCodeList"];
    /** @description A list of additional seller inputs required to ship this item using the chosen shipping service. */
    ItemLevelSellerInputsList?: definitions["AdditionalSellerInputsList"];
  };
  /** @description The list of items to be included in a shipment. */
  ItemList: definitions["Item"][];
  /**
   * Format: int32
   * @description The number of items.
   */
  ItemQuantity: number;
  /** @description The description of the item. */
  ItemDescription: string;
  /** @description Data for creating a shipping label and dimensions for printing the label. */
  Label: {
    CustomTextForLabel?: definitions["CustomTextForLabel"];
    Dimensions: definitions["LabelDimensions"];
    FileContents: definitions["FileContents"];
    LabelFormat?: definitions["LabelFormat"];
    StandardIdForLabel?: definitions["StandardIdForLabel"];
  };
  /** @description Custom text for shipping labels. */
  LabelCustomization: {
    CustomTextForLabel?: definitions["CustomTextForLabel"];
    StandardIdForLabel?: definitions["StandardIdForLabel"];
  };
  /** @description A label dimension. */
  LabelDimension: number;
  /** @description Dimensions for printing a shipping label. */
  LabelDimensions: {
    /** @description The length dimension. */
    Length: definitions["LabelDimension"];
    /** @description The width dimension. */
    Width: definitions["LabelDimension"];
    /** @description The unit of measurement. */
    Unit: definitions["UnitOfLength"];
  };
  /** @description The label format. */
  LabelFormat: "PDF" | "PNG" | "ZPL203" | "ZPL300" | "ShippingServiceDefault";
  /** @description List of label formats. */
  LabelFormatList: definitions["LabelFormat"][];
  /** @description The length. */
  Length: {
    /** @description The value in units. */
    value?: number;
    unit?: definitions["UnitOfLength"];
  };
  /** @description An Amazon-defined identifier for an individual item in an order. */
  OrderItemId: string;
  /** Format: double */
  PackageDimension: number;
  /** @description The dimensions of a package contained in a shipment. */
  PackageDimensions: {
    /** @description The length dimension. If you don't specify PredefinedPackageDimensions, you must specify the Length. */
    Length?: definitions["PackageDimension"];
    /** @description The width dimension. If you don't specify PredefinedPackageDimensions, you must specify the Width. */
    Width?: definitions["PackageDimension"];
    /** @description The height dimension. If you don't specify PredefinedPackageDimensions, you must specify the Height. */
    Height?: definitions["PackageDimension"];
    /** @description The unit of measurement. If you don't specify PredefinedPackageDimensions, you must specify the Unit. */
    Unit?: definitions["UnitOfLength"];
    PredefinedPackageDimensions?: definitions["PredefinedPackageDimensions"];
  };
  /** @description The phone number. */
  PhoneNumber: string;
  /** @description The zip code or postal code. */
  PostalCode: string;
  /**
   * @description An enumeration of predefined parcel tokens. If you specify a PredefinedPackageDimensions token, you are not obligated to use a branded package from a carrier. For example, if you specify the FedEx_Box_10kg token, you do not have to use that particular package from FedEx. You are only obligated to use a box that matches the dimensions specified by the token.
   *
   * Note: Please note that carriers can have restrictions on the type of package allowed for certain ship methods. Check the carrier website for all details. Example: Flat rate pricing is available when materials are sent by USPS in a USPS-produced Flat Rate Envelope or Box.
   */
  PredefinedPackageDimensions:
    | "FedEx_Box_10kg"
    | "FedEx_Box_25kg"
    | "FedEx_Box_Extra_Large_1"
    | "FedEx_Box_Extra_Large_2"
    | "FedEx_Box_Large_1"
    | "FedEx_Box_Large_2"
    | "FedEx_Box_Medium_1"
    | "FedEx_Box_Medium_2"
    | "FedEx_Box_Small_1"
    | "FedEx_Box_Small_2"
    | "FedEx_Envelope"
    | "FedEx_Padded_Pak"
    | "FedEx_Pak_1"
    | "FedEx_Pak_2"
    | "FedEx_Tube"
    | "FedEx_XL_Pak"
    | "UPS_Box_10kg"
    | "UPS_Box_25kg"
    | "UPS_Express_Box"
    | "UPS_Express_Box_Large"
    | "UPS_Express_Box_Medium"
    | "UPS_Express_Box_Small"
    | "UPS_Express_Envelope"
    | "UPS_Express_Hard_Pak"
    | "UPS_Express_Legal_Envelope"
    | "UPS_Express_Pak"
    | "UPS_Express_Tube"
    | "UPS_Laboratory_Pak"
    | "UPS_Pad_Pak"
    | "UPS_Pallet"
    | "USPS_Card"
    | "USPS_Flat"
    | "USPS_FlatRateCardboardEnvelope"
    | "USPS_FlatRateEnvelope"
    | "USPS_FlatRateGiftCardEnvelope"
    | "USPS_FlatRateLegalEnvelope"
    | "USPS_FlatRatePaddedEnvelope"
    | "USPS_FlatRateWindowEnvelope"
    | "USPS_LargeFlatRateBoardGameBox"
    | "USPS_LargeFlatRateBox"
    | "USPS_Letter"
    | "USPS_MediumFlatRateBox1"
    | "USPS_MediumFlatRateBox2"
    | "USPS_RegionalRateBoxA1"
    | "USPS_RegionalRateBoxA2"
    | "USPS_RegionalRateBoxB1"
    | "USPS_RegionalRateBoxB2"
    | "USPS_RegionalRateBoxC"
    | "USPS_SmallFlatRateBox"
    | "USPS_SmallFlatRateEnvelope";
  /** @description The set of fixed values in an additional seller input. */
  RestrictedSetValues: string[];
  /** @description A seller-defined order identifier. */
  SellerOrderId: string;
  /** @description The details of a shipment, including the shipment status. */
  Shipment: {
    ShipmentId: definitions["ShipmentId"];
    AmazonOrderId: definitions["AmazonOrderId"];
    SellerOrderId?: definitions["SellerOrderId"];
    ItemList: definitions["ItemList"];
    /** @description The address of the sender. */
    ShipFromAddress: definitions["Address"];
    /** @description The destination address for the shipment. */
    ShipToAddress: definitions["Address"];
    PackageDimensions: definitions["PackageDimensions"];
    /** @description The package weight. */
    Weight: definitions["Weight"];
    /** @description If DeclaredValue was specified in a previous call to the createShipment operation, then Insurance indicates the amount that the carrier will use to insure the shipment. If DeclaredValue was not specified with a previous call to the createShipment operation, then the shipment will be insured for the carrier's minimum insurance amount, or the combined sale prices that the items are listed for in the shipment, whichever is less. */
    Insurance: definitions["CurrencyAmount"];
    ShippingService: definitions["ShippingService"];
    /** @description Data for creating a shipping label and dimensions for printing the label. If the shipment is canceled, an empty Label is returned. */
    Label: definitions["Label"];
    /** @description The shipment status. */
    Status: definitions["ShipmentStatus"];
    TrackingId?: definitions["TrackingId"];
    /** @description The date and time the shipment was created. */
    CreatedDate: definitions["Timestamp"];
    /** @description The date and time of the last update. */
    LastUpdatedDate?: definitions["Timestamp"];
  };
  /** @description An Amazon-defined shipment identifier. */
  ShipmentId: string;
  /** @description Shipment information required for requesting shipping service offers or for creating a shipment. */
  ShipmentRequestDetails: {
    /** @description An Amazon-defined order identifier in 3-7-7 format. */
    AmazonOrderId: definitions["AmazonOrderId"];
    /** @description A seller-defined order identifier. */
    SellerOrderId?: definitions["SellerOrderId"];
    ItemList: definitions["ItemList"];
    /** @description The address of the sender. */
    ShipFromAddress: definitions["Address"];
    /** @description The package dimensions. */
    PackageDimensions: definitions["PackageDimensions"];
    /** @description The package weight. */
    Weight: definitions["Weight"];
    /** @description The date by which the package must arrive to keep the promise to the customer, in ISO 8601 datetime format. If MustArriveByDate is specified, only shipping service offers that can be delivered by that date are returned. */
    MustArriveByDate?: definitions["Timestamp"];
    /** @description When used in a request, this is the date and time that the seller wants to ship the package. When used in a response, this is the date and time that the package can be shipped by the indicated method. */
    ShipDate?: definitions["Timestamp"];
    /** @description Extra services offered by the carrier. */
    ShippingServiceOptions: definitions["ShippingServiceOptions"];
    /** @description Label customization options. */
    LabelCustomization?: definitions["LabelCustomization"];
  };
  /** @description The shipment status. */
  ShipmentStatus:
    | "Purchased"
    | "RefundPending"
    | "RefundRejected"
    | "RefundApplied";
  /** @description The delivery confirmation level. */
  DeliveryExperienceOption:
    | "DeliveryConfirmationWithAdultSignature"
    | "DeliveryConfirmationWithSignature"
    | "DeliveryConfirmationWithoutSignature"
    | "NoTracking"
    | "NoPreference";
  /** @description Filter for use when requesting eligible shipping services. */
  ShippingOfferingFilter: {
    /** @description When true, include a packing slip with the label. */
    IncludePackingSlipWithLabel?: boolean;
    /** @description When true, include complex shipping options. */
    IncludeComplexShippingOptions?: boolean;
    CarrierWillPickUp?: definitions["CarrierWillPickUpOption"];
    DeliveryExperience?: definitions["DeliveryExperienceOption"];
  };
  /** @description A shipping service offer made by a carrier. */
  ShippingService: {
    /** @description A plain text representation of a carrier's shipping service. For example, "UPS Ground" or "FedEx Standard Overnight". */
    ShippingServiceName: string;
    /** @description The name of the carrier. */
    CarrierName: string;
    ShippingServiceId: definitions["ShippingServiceIdentifier"];
    /** @description An Amazon-defined shipping service offer identifier. */
    ShippingServiceOfferId: string;
    /** @description The date that the carrier will ship the package. */
    ShipDate: definitions["Timestamp"];
    /** @description The earliest date by which the shipment will be delivered. */
    EarliestEstimatedDeliveryDate?: definitions["Timestamp"];
    /** @description The latest date by which the shipment will be delivered. */
    LatestEstimatedDeliveryDate?: definitions["Timestamp"];
    /** @description The amount that the carrier will charge for the shipment. */
    Rate: definitions["CurrencyAmount"];
    /** @description Extra services offered by the carrier. */
    ShippingServiceOptions: definitions["ShippingServiceOptions"];
    AvailableShippingServiceOptions?: definitions["AvailableShippingServiceOptions"];
    AvailableLabelFormats?: definitions["LabelFormatList"];
    AvailableFormatOptionsForLabel?: definitions["AvailableFormatOptionsForLabelList"];
    /** @description When true, additional seller inputs are required. */
    RequiresAdditionalSellerInputs: boolean;
  };
  /** @description An Amazon-defined shipping service identifier. */
  ShippingServiceIdentifier: string;
  /** @description A list of shipping services offers. */
  ShippingServiceList: definitions["ShippingService"][];
  /** @description Extra services provided by a carrier. */
  ShippingServiceOptions: {
    /** @description The delivery confirmation level. */
    DeliveryExperience: definitions["DeliveryExperienceType"];
    /** @description The declared value of the shipment. The carrier uses this value to determine the amount to use to insure the shipment. If DeclaredValue is greater than the carrier's minimum insurance amount, the seller is charged for the additional insurance as determined by the carrier. For information about optional insurance coverage, see the Seller Central Help [UK](https://sellercentral.amazon.co.uk/gp/help/200204080) [US](https://sellercentral.amazon.com/gp/help/200204080). */
    DeclaredValue?: definitions["CurrencyAmount"];
    /**
     * @description When true, the carrier will pick up the package.
     *
     * Note: Scheduled carrier pickup is available only using Dynamex (US), DPD (UK), and Royal Mail (UK).
     */
    CarrierWillPickUp: boolean;
    CarrierWillPickUpOption?: definitions["CarrierWillPickUpOption"];
    /** @description The seller's preferred label format. */
    LabelFormat?: definitions["LabelFormat"];
  };
  /** @description Carrier will pick up option. */
  CarrierWillPickUpOption:
    | "CarrierWillPickUp"
    | "ShipperWillDropOff"
    | "NoPreference";
  /** @description The type of standard identifier to print on the label. */
  StandardIdForLabel: "AmazonOrderId";
  /** @description The state or province code. **Note.** Required in the Canada, US, and UK marketplaces. Also required for shipments originating from China. */
  StateOrProvinceCode: string;
  /** @description Information about a rejected shipping service */
  RejectedShippingService: {
    /** @description The rejected shipping carrier name. e.g. USPS */
    CarrierName: string;
    /** @description The rejected shipping service localized name. e.g. FedEx Standard Overnight */
    ShippingServiceName: string;
    /** @description The rejected shipping service identifier. e.g. FEDEX_PTP_STANDARD_OVERNIGHT */
    ShippingServiceId: definitions["ShippingServiceIdentifier"];
    /** @description A reason code meant to be consumed programatically. e.g. CARRIER_CANNOT_SHIP_TO_POBOX */
    RejectionReasonCode: string;
    /** @description A localized human readable description of the rejected reason. */
    RejectionReasonMessage?: string;
  };
  /** @description List of services that were for some reason unavailable for this request */
  RejectedShippingServiceList: definitions["RejectedShippingService"][];
  /** @description A carrier who is temporarily unavailable, most likely due to a service outage experienced by the carrier. */
  TemporarilyUnavailableCarrier: {
    /** @description The name of the carrier. */
    CarrierName: string;
  };
  /** @description A list of temporarily unavailable carriers. */
  TemporarilyUnavailableCarrierList: definitions["TemporarilyUnavailableCarrier"][];
  /** @description A carrier whose terms and conditions have not been accepted by the seller. */
  TermsAndConditionsNotAcceptedCarrier: {
    /** @description The name of the carrier. */
    CarrierName: string;
  };
  /** @description List of carriers whose terms and conditions were not accepted by the seller. */
  TermsAndConditionsNotAcceptedCarrierList: definitions["TermsAndConditionsNotAcceptedCarrier"][];
  /** Format: date-time */
  Timestamp: string;
  /** @description The shipment tracking identifier provided by the carrier. */
  TrackingId: string;
  /** @description The Transparency code associated with the item. */
  TransparencyCode: string;
  /** @description A list of transparency codes. */
  TransparencyCodeList: definitions["TransparencyCode"][];
  /** @description The unit of length. */
  UnitOfLength: "inches" | "centimeters";
  /** @description The unit of weight. */
  UnitOfWeight: "oz" | "g";
  /** @description The weight. */
  Weight: {
    Value: definitions["WeightValue"];
    Unit: definitions["UnitOfWeight"];
  };
  /**
   * Format: double
   * @description The weight value.
   */
  WeightValue: number;
}

export interface operations {
  /**
   * Returns a list of shipping service offers that satisfy the specified shipment request details.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  getEligibleShipmentServicesOld: {
    parameters: {
      body: {
        body: definitions["GetEligibleShipmentServicesRequest"];
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
    };
  };
  /**
   * Returns a list of shipping service offers that satisfy the specified shipment request details.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 5 | 10 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  getEligibleShipmentServices: {
    parameters: {
      body: {
        body: definitions["GetEligibleShipmentServicesRequest"];
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetEligibleShipmentServicesResponse"];
      };
    };
  };
  /**
   * Returns the shipment information for an existing shipment.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  getShipment: {
    parameters: {
      path: {
        /** The Amazon-defined shipment identifier for the shipment. */
        shipmentId: string;
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetShipmentResponse"];
      };
    };
  };
  /**
   * Cancel the shipment indicated by the specified shipment identifier.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  cancelShipment: {
    parameters: {
      path: {
        /** The Amazon-defined shipment identifier for the shipment to cancel. */
        shipmentId: string;
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The resource specified does not exist. */
      404: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
    };
  };
  /**
   * Cancel the shipment indicated by the specified shipment identifer.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  cancelShipmentOld: {
    parameters: {
      path: {
        /** The Amazon-defined shipment identifier for the shipment to cancel. */
        shipmentId: string;
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["CancelShipmentResponse"];
      };
    };
  };
  /**
   * Create a shipment with the information provided.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  createShipment: {
    parameters: {
      body: {
        body: definitions["CreateShipmentRequest"];
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["CreateShipmentResponse"];
      };
    };
  };
  /**
   * Get a list of additional seller inputs required for a ship method. This is generally used for international shipping.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  getAdditionalSellerInputsOld: {
    parameters: {
      body: {
        body: definitions["GetAdditionalSellerInputsRequest"];
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
    };
  };
  /**
   * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 1 |
   *
   * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
   */
  getAdditionalSellerInputs: {
    parameters: {
      body: {
        body: definitions["GetAdditionalSellerInputsRequest"];
      };
    };
    responses: {
      /** Success */
      200: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetAdditionalSellerInputsResponse"];
      };
    };
  };
}

export interface external {}
