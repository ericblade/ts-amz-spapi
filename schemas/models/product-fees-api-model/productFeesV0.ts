/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/products/fees/v0/listings/{SellerSKU}/feesEstimate": {
    /**
     * Returns the estimated fees for the item indicated by the specified seller SKU in the marketplace specified in the request body.
     *
     * You can call `getMyFeesEstimateForSKU` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take any estimated fees into account. Each fees estimate request must include an original identifier. This identifier is included in the fees estimate so that you can correlate a fees estimate with the original request.
     *
     * **Note:** The identifier value is only an estimate, actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 2 |
     *
     * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    post: operations["getMyFeesEstimateForSKU"];
    parameters: {};
  };
  "/products/fees/v0/items/{Asin}/feesEstimate": {
    /**
     * Returns the estimated fees for the item indicated by the specified ASIN in the marketplace specified in the request body.
     *
     * You can call `getMyFeesEstimateForASIN` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take estimated fees into account. Each fees request must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.
     *
     * **Note:** This identifier value is only an estimate, actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 1 | 2 |
     *
     * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    post: operations["getMyFeesEstimateForASIN"];
    parameters: {};
  };
  "/products/fees/v0/feesEstimate": {
    /**
     * Returns the estimated fees for a list of products.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 0.5 | 1 |
     *
     * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    post: operations["getMyFeesEstimates"];
    parameters: {};
  };
}

export interface definitions {
  /** @description Request schema. */
  GetMyFeesEstimateRequest: {
    FeesEstimateRequest?: definitions["FeesEstimateRequest"];
  };
  /** @description Request for estimated fees for a list of products. */
  GetMyFeesEstimatesRequest: definitions["FeesEstimateByIdRequest"][];
  /** @description A product, marketplace, and proposed price used to request estimated fees. */
  FeesEstimateByIdRequest: {
    FeesEstimateRequest?: definitions["FeesEstimateRequest"];
    IdType: definitions["IdType"];
    /** @description The item identifier. */
    IdValue: string;
  };
  FeesEstimateRequest: {
    /** @description A marketplace identifier. */
    MarketplaceId: string;
    /** @description When true, the offer is fulfilled by Amazon. */
    IsAmazonFulfilled?: boolean;
    /** @description The product price that the fee estimate is based on. */
    PriceToEstimateFees: definitions["PriceToEstimateFees"];
    /** @description A unique identifier provided by the caller to track this request. */
    Identifier: string;
    OptionalFulfillmentProgram?: definitions["OptionalFulfillmentProgram"];
  };
  GetMyFeesEstimateResponse: {
    /** @description The payload for the operation. */
    payload?: definitions["GetMyFeesEstimateResult"];
    errors?: definitions["ErrorList"];
  };
  /** @description Response schema. */
  GetMyFeesEstimateResult: {
    /** @description The item's estimated fees. */
    FeesEstimateResult?: definitions["FeesEstimateResult"];
  };
  /** @description Estimated fees for a list of products. */
  GetMyFeesEstimatesResponse: definitions["FeesEstimateResult"][];
  Points: {
    /** Format: int32 */
    PointsNumber?: number;
    PointsMonetaryValue?: definitions["MoneyType"];
  };
  /** @description A list of error responses returned when a request is unsuccessful. */
  GetMyFeesEstimatesErrorList: {
    errors: definitions["Error"][];
  };
  /** @description A list of error responses returned when a request is unsuccessful. */
  ErrorList: definitions["Error"][];
  Error: {
    /** @description An error code that identifies the type of error that occurred. */
    code: string;
    /** @description A message that describes the error condition. */
    message: string;
    /** @description Additional information that can help the caller understand or fix the issue. */
    details?: string;
  };
  /** @description An item identifier and the estimated fees for the item. */
  FeesEstimateResult: {
    /** @description The status of the fee request. Possible values: Success, ClientError, ServiceError. */
    Status?: string;
    /** @description Information used to identify a fees estimate request. */
    FeesEstimateIdentifier?: definitions["FeesEstimateIdentifier"];
    /** @description The total estimated fees for an item and a list of details. */
    FeesEstimate?: definitions["FeesEstimate"];
    /** @description An error object with a type, code, and message. */
    Error?: definitions["FeesEstimateError"];
  };
  /** @description An item identifier, marketplace, time of request, and other details that identify an estimate. */
  FeesEstimateIdentifier: {
    /** @description A marketplace identifier. */
    MarketplaceId?: string;
    /** @description The seller identifier. */
    SellerId?: string;
    IdType?: definitions["IdType"];
    /** @description The item identifier. */
    IdValue?: string;
    /** @description When true, the offer is fulfilled by Amazon. */
    IsAmazonFulfilled?: boolean;
    /** @description The item price on which the fee estimate is based. */
    PriceToEstimateFees?: definitions["PriceToEstimateFees"];
    /** @description A unique identifier provided by the caller to track this request. */
    SellerInputIdentifier?: string;
    OptionalFulfillmentProgram?: definitions["OptionalFulfillmentProgram"];
  };
  /** @description Price information for an item, used to estimate fees. */
  PriceToEstimateFees: {
    /** @description The price of the item. */
    ListingPrice: definitions["MoneyType"];
    /** @description The shipping cost. */
    Shipping?: definitions["MoneyType"];
    /** @description The number of Amazon Points offered with the purchase of an item. */
    Points?: definitions["Points"];
  };
  /** @description The total estimated fees for an item and a list of details. */
  FeesEstimate: {
    /**
     * Format: date-time
     * @description The time at which the fees were estimated. This defaults to the time the request is made.
     */
    TimeOfFeesEstimation: string;
    /** @description Total estimated fees for a given item, price, and fulfillment channel. */
    TotalFeesEstimate?: definitions["MoneyType"];
    FeeDetailList?: definitions["FeeDetailList"];
  };
  /** @description A list of other fees that contribute to a given fee. */
  FeeDetailList: definitions["FeeDetail"][];
  /** @description An unexpected error occurred during this operation. */
  FeesEstimateError: {
    /** @description An error type, identifying either the receiver or the sender as the originator of the error. */
    Type: string;
    /** @description An error code that identifies the type of error that occurred. */
    Code: string;
    /** @description A message that describes the error condition. */
    Message: string;
    Detail: definitions["FeesEstimateErrorDetail"];
  };
  /** @description Additional information that can help the caller understand or fix the issue. */
  FeesEstimateErrorDetail: { [key: string]: unknown }[];
  /** @description The type of fee, fee amount, and other details. */
  FeeDetail: {
    /** @description The type of fee charged to a seller. */
    FeeType: string;
    /** @description The amount charged for a given fee. */
    FeeAmount: definitions["MoneyType"];
    /** @description The promotion amount for a given fee. */
    FeePromotion?: definitions["MoneyType"];
    /** @description The tax amount for a given fee. */
    TaxAmount?: definitions["MoneyType"];
    /** @description The final fee amount for a given fee. */
    FinalFee: definitions["MoneyType"];
    IncludedFeeDetailList?: definitions["IncludedFeeDetailList"];
  };
  /** @description A list of other fees that contribute to a given fee. */
  IncludedFeeDetailList: definitions["IncludedFeeDetail"][];
  /** @description The type of fee, fee amount, and other details. */
  IncludedFeeDetail: {
    /** @description The type of fee charged to a seller. */
    FeeType: string;
    /** @description The amount charged for a given fee. */
    FeeAmount: definitions["MoneyType"];
    /** @description The promotion amount for a given fee. */
    FeePromotion?: definitions["MoneyType"];
    /** @description The tax amount for a given fee. */
    TaxAmount?: definitions["MoneyType"];
    /** @description The final fee amount for a given fee. */
    FinalFee: definitions["MoneyType"];
  };
  MoneyType: {
    /** @description The currency code in ISO 4217 format. */
    CurrencyCode?: string;
    /** @description The monetary value. */
    Amount?: number;
  };
  /** @description An optional enrollment program to return the estimated fees when the offer is fulfilled by Amazon (IsAmazonFulfilled is set to true). */
  OptionalFulfillmentProgram: "FBA_CORE" | "FBA_SNL" | "FBA_EFN";
  /** @description The type of product identifier used in a `FeesEstimateByIdRequest`. */
  IdType: "ASIN" | "SellerSKU";
}

export interface operations {
  /**
   * Returns the estimated fees for the item indicated by the specified seller SKU in the marketplace specified in the request body.
   *
   * You can call `getMyFeesEstimateForSKU` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take any estimated fees into account. Each fees estimate request must include an original identifier. This identifier is included in the fees estimate so that you can correlate a fees estimate with the original request.
   *
   * **Note:** The identifier value is only an estimate, actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 2 |
   *
   * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
   */
  getMyFeesEstimateForSKU: {
    parameters: {
      body: {
        body: definitions["GetMyFeesEstimateRequest"];
      };
      path: {
        /** Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit. */
        SellerSKU: string;
      };
    };
    responses: {
      /** Success. */
      200: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
    };
  };
  /**
   * Returns the estimated fees for the item indicated by the specified ASIN in the marketplace specified in the request body.
   *
   * You can call `getMyFeesEstimateForASIN` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take estimated fees into account. Each fees request must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.
   *
   * **Note:** This identifier value is only an estimate, actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 1 | 2 |
   *
   * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
   */
  getMyFeesEstimateForASIN: {
    parameters: {
      body: {
        body: definitions["GetMyFeesEstimateRequest"];
      };
      path: {
        /** The Amazon Standard Identification Number (ASIN) of the item. */
        Asin: string;
      };
    };
    responses: {
      /** Success. */
      200: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetMyFeesEstimateResponse"];
      };
    };
  };
  /**
   * Returns the estimated fees for a list of products.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 0.5 | 1 |
   *
   * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
   */
  getMyFeesEstimates: {
    parameters: {
      body: {
        body: definitions["GetMyFeesEstimatesRequest"];
      };
    };
    responses: {
      /** Success. */
      200: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesResponse"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** The request's Authorization header is not formatted correctly or does not contain a valid token. */
      401: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** Indicates access to the resource is forbidden. Possible reasons include **Access Denied**, **Unauthorized**, **Expired Token**, or **Invalid Signature**. */
      403: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** The specified resource does not exist. */
      404: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["GetMyFeesEstimatesErrorList"];
      };
    };
  };
}

export interface external {}
