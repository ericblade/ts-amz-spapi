/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/listings/2021-08-01/restrictions": {
    /**
     * Returns listing restrictions for an item in the Amazon Catalog.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | 5 | 10 |
     *
     * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     */
    get: operations["getListingsRestrictions"];
  };
}

export interface definitions {
  /** @description A list of restrictions for the specified Amazon catalog item. */
  RestrictionList: {
    restrictions: definitions["Restriction"][];
  };
  /** @description A listing restriction, optionally qualified by a condition, with a list of reasons for the restriction. */
  Restriction: {
    /** @description A marketplace identifier. Identifies the Amazon marketplace where the restriction is enforced. */
    marketplaceId: string;
    /** @description The condition that applies to the restriction. */
    conditionType?:
      | "new_new"
      | "new_open_box"
      | "new_oem"
      | "refurbished_refurbished"
      | "used_like_new"
      | "used_very_good"
      | "used_good"
      | "used_acceptable"
      | "collectible_like_new"
      | "collectible_very_good"
      | "collectible_good"
      | "collectible_acceptable"
      | "club_club";
    /** @description A list of reasons for the restriction. */
    reasons?: definitions["Reason"][];
  };
  /** @description A reason for the restriction, including path forward links that may allow Selling Partners to remove the restriction, if available. */
  Reason: {
    /** @description A message describing the reason for the restriction. */
    message: string;
    /** @description A code indicating why the listing is restricted. */
    reasonCode?: "APPROVAL_REQUIRED" | "ASIN_NOT_FOUND" | "NOT_ELIGIBLE";
    /** @description A list of path forward links that may allow Selling Partners to remove the restriction. */
    links?: definitions["Link"][];
  };
  /** @description A link to resources related to a listing restriction. */
  Link: {
    /**
     * Format: uri
     * @description The URI of the related resource.
     */
    resource: string;
    /** @description The HTTP verb used to interact with the related resource. */
    verb: "GET";
    /** @description The title of the related resource. */
    title?: string;
    /** @description The media type of the related resource. */
    type?: string;
  };
  /** @description A list of error responses returned when a request is unsuccessful. */
  ErrorList: definitions["Error"][];
  /** @description Error response returned when the request is unsuccessful. */
  Error: {
    /** @description An error code that identifies the type of error that occurred. */
    code: string;
    /** @description A message that describes the error condition. */
    message: string;
    /** @description Additional details that can help the caller understand or fix the issue. */
    details?: string;
  };
}

export interface operations {
  /**
   * Returns listing restrictions for an item in the Amazon Catalog.
   *
   * **Usage Plan:**
   *
   * | Rate (requests per second) | Burst |
   * | ---- | ---- |
   * | 5 | 10 |
   *
   * The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
   */
  getListingsRestrictions: {
    parameters: {
      query: {
        /** The Amazon Standard Identification Number (ASIN) of the item. */
        asin: string;
        /** The condition used to filter restrictions. */
        conditionType?:
          | "new_new"
          | "new_open_box"
          | "new_oem"
          | "refurbished_refurbished"
          | "used_like_new"
          | "used_very_good"
          | "used_good"
          | "used_acceptable"
          | "collectible_like_new"
          | "collectible_very_good"
          | "collectible_good"
          | "collectible_acceptable"
          | "club_club";
        /** A selling partner identifier, such as a merchant account. */
        sellerId: string;
        /** A comma-delimited list of Amazon marketplace identifiers for the request. */
        marketplaceIds: string[];
        /** A locale for reason text localization. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale. */
        reasonLocale?: string;
      };
    };
    responses: {
      /** Successfully retrieved the listings restrictions. */
      200: {
        headers: {};
        schema: definitions["RestrictionList"];
      };
      /** Request has missing or invalid parameters and cannot be parsed. */
      400: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
      403: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** The resource specified does not exist. */
      404: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** The request size exceeded the maximum accepted size. */
      413: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** The request payload is in an unsupported format. */
      415: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** The frequency of requests was greater than allowed. */
      429: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** An unexpected condition occurred that prevented the server from fulfilling the request. */
      500: {
        headers: {};
        schema: definitions["ErrorList"];
      };
      /** Temporary overloading or maintenance of the server. */
      503: {
        headers: {};
        schema: definitions["ErrorList"];
      };
    };
  };
}

export interface external {}
