/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    "/vendor/shipping/v1/shipmentConfirmations": {
        /**
         * Submits one or more shipment confirmations for vendor orders.
         *
         * **Usage Plans:**
         *
         * | Plan type | Rate (requests per second) | Burst |
         * | ---- | ---- | ---- |
         * |Default| 10 | 10 |
         * |Selling partner specific| Variable | Variable |
         *
         * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
         */
        post: operations["SubmitShipmentConfirmations"];
        parameters: {};
    };
}
export interface definitions {
    /** @description The request schema for the SubmitShipmentConfirmations operation. */
    SubmitShipmentConfirmationsRequest: {
        shipmentConfirmations?: definitions["ShipmentConfirmation"][];
    };
    ShipmentConfirmation: {
        /** @description Unique shipment ID (not used over the last 365 days). */
        shipmentIdentifier: string;
        /** @description Indicates if this shipment confirmation is the initial confirmation, or intended to replace an already posted shipment confirmation. If replacing an existing shipment confirmation, be sure to provide the identical shipmentIdentifier and sellingParty information as in the previous confirmation. */
        shipmentConfirmationType: "Original" | "Replace";
        /** @description The type of shipment. */
        shipmentType?: "TruckLoad" | "LessThanTruckLoad" | "SmallParcel";
        /** @description Shipment hierarchical structure. */
        shipmentStructure?: "PalletizedAssortmentCase" | "LooseAssortmentCase" | "PalletOfItems" | "PalletizedStandardCase" | "LooseStandardCase" | "MasterPallet" | "MasterCase";
        /** @description Transportation details for this shipment. */
        transportationDetails?: definitions["TransportationDetails"];
        /** @description The Amazon Reference Number is a unique identifier generated by Amazon for all Collect/WePay shipments when you submit  a routing request. This field is mandatory for Collect/WePay shipments. */
        amazonReferenceNumber?: string;
        /**
         * Format: date-time
         * @description Date on which the shipment confirmation was submitted.
         */
        shipmentConfirmationDate: string;
        /**
         * Format: date-time
         * @description The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the Amazon destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future.
         */
        shippedDate?: string;
        /**
         * Format: date-time
         * @description The date and time on which the shipment is expected to reach buyer's warehouse. It needs to be an estimate based on the average transit time between ship from location and the destination. The exact appointment time will be provided by the buyer and is potentially not known when creating the shipment confirmation.
         */
        estimatedDeliveryDate?: string;
        /** @description Name/Address and tax details of the selling party. */
        sellingParty: definitions["PartyIdentification"];
        /** @description Name/Address and tax details of the ship from party. */
        shipFromParty: definitions["PartyIdentification"];
        /** @description Name/Address of the destination warehouse where the shipment is being shipped to. */
        shipToParty: definitions["PartyIdentification"];
        shipmentMeasurements?: definitions["ShipmentMeasurements"];
        /** @description Provide these fields only if this shipment is a direct import. */
        importDetails?: definitions["ImportDetails"];
        /** @description A list of the items in this shipment and their associated details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level. */
        shippedItems: definitions["Item"][];
        /** @description A list of the cartons in this shipment. */
        cartons?: definitions["Carton"][];
        /** @description A list of the pallets in this shipment. */
        pallets?: definitions["Pallet"][];
    };
    /** @description Shipment measurement details. */
    ShipmentMeasurements: {
        /** @description Gross weight of the shipment. */
        grossShipmentWeight?: definitions["Weight"];
        /** @description Volume of the shipment. */
        shipmentVolume?: definitions["Volume"];
        /** @description Number of cartons present in the shipment. Provide the cartonCount only for unpalletized shipments. */
        cartonCount?: number;
        /** @description Number of pallets present in the shipment. Provide the palletCount only for palletized shipments. */
        palletCount?: number;
    };
    TransportationDetails: {
        /** @description Code that identifies the carrier for the shipment. The Standard Carrier Alpha Code (SCAC) is a unique two to four letter code used to identify a carrier. Carrier SCAC codes are assigned and maintained by the NMFTA (National Motor Freight Association). This field is mandatory for US, CA, MX shipment confirmations. */
        carrierScac?: string;
        /** @description The field also known as PRO number is a unique number assigned by the carrier. It is used to identify and track the shipment that goes out for delivery. This field is mandatory for UA, CA, MX shipment confirmations. */
        carrierShipmentReferenceNumber?: string;
        /** @description The mode of transportation for this shipment. */
        transportationMode?: "Road" | "Air" | "Ocean";
        /** @description Bill Of Lading (BOL) number is the unique number assigned by the vendor. The BOL present in the Shipment Confirmation message ideally matches the paper BOL provided with the shipment, but that is no must. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field. */
        billOfLadingNumber?: string;
    };
    ImportDetails: {
        /** @description This is used for import purchase orders only. If the recipient requests, this field will contain the shipment method of payment. */
        methodOfPayment?: "PaidByBuyer" | "CollectOnDelivery" | "DefinedByBuyerAndSeller" | "FOBPortOfCall" | "PrepaidBySeller" | "PaidBySeller";
        /** @description The container's seal number. */
        sealNumber?: string;
        /** @description The route and stop details for this shipment. */
        route?: definitions["Route"];
        /** @description Types and numbers of container(s) for import purchase orders. Can be a comma-separated list if shipment has multiple containers. */
        importContainers?: string;
        /** @description Billable weight of the direct imports shipment. */
        billableWeight?: definitions["Weight"];
        /**
         * Format: date-time
         * @description Date on which the shipment is expected to be shipped. This value should not be in the past and not more than 60 days out in the future.
         */
        estimatedShipByDate?: string;
    };
    /** @description Details of the item being shipped. */
    Item: {
        /** @description Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level. */
        itemSequenceNumber: string;
        /** @description Amazon Standard Identification Number (ASIN) of an item. */
        amazonProductIdentifier?: string;
        /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order. */
        vendorProductIdentifier?: string;
        /** @description Total item quantity shipped in this shipment. */
        shippedQuantity: definitions["ItemQuantity"];
        itemDetails?: definitions["ItemDetails"];
    };
    /** @description Details of the carton/package being shipped. */
    Carton: {
        /** @description A list of carton identifiers. */
        cartonIdentifiers?: definitions["ContainerIdentification"][];
        /** @description Carton sequence number for the carton. The first carton will be 001, the second 002, and so on. This number is used as a reference to refer to this carton from the pallet level. */
        cartonSequenceNumber: string;
        dimensions?: definitions["Dimensions"];
        weight?: definitions["Weight"];
        /** @description This is required to be provided for every carton in the small parcel shipments. */
        trackingNumber?: string;
        /** @description A list of container item details. */
        items: definitions["ContainerItem"][];
    };
    /** @description Details of the Pallet/Tare being shipped. */
    Pallet: {
        /** @description A list of pallet identifiers. */
        palletIdentifiers: definitions["ContainerIdentification"][];
        /** @description Number of layers per pallet. */
        tier?: number;
        /** @description Number of cartons per layer on the pallet. */
        block?: number;
        dimensions?: definitions["Dimensions"];
        weight?: definitions["Weight"];
        /** @description Carton reference details. */
        cartonReferenceDetails?: definitions["CartonReferenceDetails"];
        /** @description A list of container item details. */
        items?: definitions["ContainerItem"][];
    };
    /** @description Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate. */
    ItemDetails: {
        /** @description The Amazon purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code. */
        purchaseOrderNumber?: string;
        /** @description The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items. */
        lotNumber?: string;
        /** @description Either expiryDate or mfgDate and expiryAfterDuration are mandatory for perishable items. */
        expiry?: definitions["Expiry"];
        /** @description Maximum retail price of the item being shipped. */
        maximumRetailPrice?: definitions["Money"];
        /** @description Identification of the instructions on how specified item/carton/pallet should be handled. */
        handlingCode?: "Oversized" | "Fragile" | "Food" | "HandleWithCare";
    };
    ContainerIdentification: {
        /** @description The container identification type. */
        containerIdentificationType: "SSCC" | "AMZNCC" | "GTIN" | "BPS" | "CID";
        /** @description Container identification number that adheres to the definition of the container identification type. */
        containerIdentificationNumber: string;
    };
    /** @description Carton/Pallet level details for the item. */
    ContainerItem: {
        /** @description The reference number for the item. Please provide the itemSequenceNumber from the 'items' segment to refer to that item's details here. */
        itemReference: string;
        /** @description Total item quantity shipped in this carton/pallet. */
        shippedQuantity: definitions["ItemQuantity"];
        itemDetails?: definitions["ItemDetails"];
    };
    CartonReferenceDetails: {
        /** @description Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet. */
        cartonCount?: number;
        /** @description Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the 'cartons' segment to refer to that carton's details here. */
        cartonReferenceNumbers: string[];
    };
    PartyIdentification: {
        /** @description Identification of the party by address. */
        address?: definitions["Address"];
        /** @description Assigned identification for the party. */
        partyId: string;
        /** @description Tax registration details of the entity. */
        taxRegistrationDetails?: definitions["TaxRegistrationDetails"][];
    };
    /** @description Tax registration details of the entity. */
    TaxRegistrationDetails: {
        /** @description Tax registration type for the entity. */
        taxRegistrationType: "VAT" | "GST";
        /** @description Tax registration number for the entity. For example, VAT ID. */
        taxRegistrationNumber: string;
    };
    /** @description Address of the party. */
    Address: {
        /** @description The name of the person, business or institution at that address. */
        name: string;
        /** @description First line of the address. */
        addressLine1: string;
        /** @description Additional street address information, if required. */
        addressLine2?: string;
        /** @description Additional street address information, if required. */
        addressLine3?: string;
        /** @description The city where the person, business or institution is located. */
        city?: string;
        /** @description The county where person, business or institution is located. */
        county?: string;
        /** @description The district where person, business or institution is located. */
        district?: string;
        /** @description The state or region where person, business or institution is located. */
        stateOrRegion?: string;
        /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
        postalCode?: string;
        /** @description The two digit country code in ISO 3166-1 alpha-2 format. */
        countryCode: string;
        /** @description The phone number of the person, business or institution located at that address. */
        phone?: string;
    };
    /** @description This is used only for direct import shipment confirmations. */
    Route: {
        stops: definitions["Stop"][];
    };
    /** @description Contractual or operational port or point relevant to the movement of the cargo. */
    Stop: {
        /** @description Provide the function code. */
        functionCode: "PortOfDischarge" | "FreightPayableAt" | "PortOfLoading";
        locationIdentification?: definitions["Location"];
        /**
         * Format: date-time
         * @description Date and time of the arrival of the cargo.
         */
        arrivalTime?: string;
        /**
         * Format: date-time
         * @description Date and time of the departure of the cargo.
         */
        departureTime?: string;
    };
    /** @description Location identifier. */
    Location: {
        /** @description Type of location identification. */
        type?: string;
        /** @description Location code. */
        locationCode?: string;
        /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
        countryCode?: string;
    };
    /** @description Physical dimensional measurements of a container. */
    Dimensions: {
        /** @description The length of the container. */
        length: definitions["Decimal"];
        /** @description The width of the container. */
        width: definitions["Decimal"];
        /** @description The height of the container. */
        height: definitions["Decimal"];
        /** @description The unit of measure for dimensions. */
        unitOfMeasure: "In" | "Ft" | "Meter" | "Yard";
    };
    /** @description The volume of the container. */
    Volume: {
        /** @description The unit of measurement. */
        unitOfMeasure: "CuFt" | "CuIn" | "CuM" | "CuY";
        /** @description The measurement value. */
        value: definitions["Decimal"];
    };
    /** @description The weight. */
    Weight: {
        /** @description The unit of measurement. */
        unitOfMeasure: "G" | "Kg" | "Oz" | "Lb";
        /** @description The measurement value. */
        value: definitions["Decimal"];
    };
    /** @description An amount of money, including units in the form of currency. */
    Money: {
        /** @description Three digit currency code in ISO 4217 format. */
        currencyCode: string;
        amount: definitions["Decimal"];
    };
    /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
    Decimal: string;
    /** @description Details of item quantity. */
    ItemQuantity: {
        /** @description Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level. */
        amount: number;
        /** @description Unit of measure for the shipped quantity. */
        unitOfMeasure: "Cases" | "Eaches";
        /** @description The case size, in the event that we ordered using cases. Otherwise, 1. */
        unitSize?: number;
    };
    Expiry: {
        /**
         * Format: date-time
         * @description Production, packaging or assembly date determined by the manufacturer. Its meaning is determined based on the trade item context.
         */
        manufacturerDate?: string;
        /**
         * Format: date-time
         * @description The date that determines the limit of consumption or use of a product. Its meaning is determined based on the trade item context.
         */
        expiryDate?: string;
        /** @description Duration after manufacturing date during which the product is valid for consumption. */
        expiryAfterDuration?: definitions["Duration"];
    };
    Duration: {
        /** @description Unit for duration. */
        durationUnit: "Days" | "Months";
        /** @description Value for the duration in terms of the durationUnit. */
        durationValue: number;
    };
    /** @description The response schema for the SubmitShipmentConfirmations operation. */
    SubmitShipmentConfirmationsResponse: {
        /** @description The response payload for the SubmitShipmentConfirmations operation. */
        payload?: definitions["TransactionReference"];
        errors?: definitions["ErrorList"];
    };
    TransactionReference: {
        /** @description GUID assigned by Amazon to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
        transactionId?: string;
    };
    /** @description A list of error responses returned when a request is unsuccessful. */
    ErrorList: definitions["Error"][];
    /** @description Error response returned when the request is unsuccessful. */
    Error: {
        /** @description An error code that identifies the type of error that occurred. */
        code: string;
        /** @description A message that describes the error condition. */
        message: string;
        /** @description Additional details that can help the caller understand or fix the issue. */
        details?: string;
    };
}
export interface operations {
    /**
     * Submits one or more shipment confirmations for vendor orders.
     *
     * **Usage Plans:**
     *
     * | Plan type | Rate (requests per second) | Burst |
     * | ---- | ---- | ---- |
     * |Default| 10 | 10 |
     * |Selling partner specific| Variable | Variable |
     *
     * The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    SubmitShipmentConfirmations: {
        parameters: {
            body: {
                body: definitions["SubmitShipmentConfirmationsRequest"];
            };
        };
        responses: {
            /** Success. */
            202: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** The resource specified does not exist. */
            404: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** The request payload is in an unsupported format. */
            415: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["SubmitShipmentConfirmationsResponse"];
            };
        };
    };
}
export interface external {
}
