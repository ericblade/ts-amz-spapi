/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    "/sellers/v1/marketplaceParticipations": {
        /**
         * Returns a list of marketplaces that the seller submitting the request can sell in and information about the seller's participation in those marketplaces.
         *
         * **Usage Plan:**
         *
         * | Rate (requests per second) | Burst |
         * | ---- | ---- |
         * | .016 | 15 |
         *
         * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
         */
        get: operations["getMarketplaceParticipations"];
    };
}
export interface definitions {
    /** @description Error response returned when the request is unsuccessful. */
    Error: {
        /** @description An error code that identifies the type of error that occured. */
        code: string;
        /** @description A message that describes the error condition in a human-readable form. */
        message: string;
        /** @description Additional details that can help the caller understand or fix the issue. */
        details?: string;
    };
    /** @description A list of error responses returned when a request is unsuccessful. */
    ErrorList: definitions["Error"][];
    MarketplaceParticipation: {
        marketplace: definitions["Marketplace"];
        participation: definitions["Participation"];
    };
    /** @description List of marketplace participations. */
    MarketplaceParticipationList: definitions["MarketplaceParticipation"][];
    /** @description The response schema for the getMarketplaceParticipations operation. */
    GetMarketplaceParticipationsResponse: {
        /** @description The payload for the getMarketplaceParticipations operation. */
        payload?: definitions["MarketplaceParticipationList"];
        /** @description Encountered errors for the getMarketplaceParticipations operation. */
        errors?: definitions["ErrorList"];
    };
    /** @description Detailed information about an Amazon market where a seller can list items for sale and customers can view and purchase items. */
    Marketplace: {
        /** @description The encrypted marketplace value. */
        id: string;
        /** @description Marketplace name. */
        name: string;
        /** @description The ISO 3166-1 alpha-2 format country code of the marketplace. */
        countryCode: string;
        /** @description The ISO 4217 format currency code of the marketplace. */
        defaultCurrencyCode: string;
        /** @description The ISO 639-1 format language code of the marketplace. */
        defaultLanguageCode: string;
        /** @description The domain name of the marketplace. */
        domainName: string;
    };
    /** @description Detailed information that is specific to a seller in a Marketplace. */
    Participation: {
        isParticipating: boolean;
        /** @description Specifies if the seller has suspended listings. True if the seller Listing Status is set to Inactive, otherwise False. */
        hasSuspendedListings: boolean;
    };
}
export interface operations {
    /**
     * Returns a list of marketplaces that the seller submitting the request can sell in and information about the seller's participation in those marketplaces.
     *
     * **Usage Plan:**
     *
     * | Rate (requests per second) | Burst |
     * | ---- | ---- |
     * | .016 | 15 |
     *
     * For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
     */
    getMarketplaceParticipations: {
        parameters: {};
        responses: {
            /** Marketplace participations successfully retrieved. */
            200: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** The resource specified does not exist. */
            404: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** The request size exceeded the maximum accepted size. */
            413: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** The frequency of requests was greater than allowed. */
            429: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
            /** Temporary overloading or maintenance of the server. */
            503: {
                headers: {};
                schema: definitions["GetMarketplaceParticipationsResponse"];
            };
        };
    };
}
export interface external {
}
